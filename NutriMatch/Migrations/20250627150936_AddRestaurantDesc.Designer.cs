// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NutriMatch.Data;
#nullable disable
namespace NutriMatch.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250627150936_AddRestaurantDesc")]
    partial class AddRestaurantDesc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);
            modelBuilder.Entity("NutriMatch.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    b.Property<float>("Calories")
                        .HasColumnType("real")
                        .HasColumnName("energy_kcal");
                    b.Property<float>("Carbs")
                        .HasColumnType("real")
                        .HasColumnName("carbohydrates_g");
                    b.Property<float>("Fat")
                        .HasColumnType("real")
                        .HasColumnName("total_fat_g");
                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("food_name");
                    b.Property<float>("Protein")
                        .HasColumnType("real")
                        .HasColumnName("protein_g");
                    b.HasKey("Id");
                    b.ToTable("food_macronutrients", (string)null);
                });
            modelBuilder.Entity("NutriMatch.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    b.Property<float>("Calories")
                        .HasColumnType("real");
                    b.Property<float>("Carbs")
                        .HasColumnType("real");
                    b.Property<float>("Fat")
                        .HasColumnType("real");
                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");
                    b.PrimitiveCollection<string[]>("Instructions")
                        .HasColumnType("text[]");
                    b.Property<float>("Protein")
                        .HasColumnType("real");
                    b.Property<float>("Rating")
                        .HasColumnType("real");
                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");
                    b.HasKey("Id");
                    b.ToTable("Recipes");
                });
            modelBuilder.Entity("NutriMatch.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    b.Property<int>("IngredientId")
                        .HasColumnType("integer");
                    b.Property<float>("Quantity")
                        .HasColumnType("real");
                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");
                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");
                    b.HasKey("Id");
                    b.HasIndex("IngredientId");
                    b.HasIndex("RecipeId");
                    b.ToTable("RecipeIngredients");
                });
            modelBuilder.Entity("NutriMatch.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");
                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");
                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");
                    b.HasKey("Id");
                    b.ToTable("Restaurants");
                });
            modelBuilder.Entity("NutriMatch.Models.RestaurantMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    b.Property<float>("Calories")
                        .HasColumnType("real");
                    b.Property<float>("Carbs")
                        .HasColumnType("real");
                    b.Property<float>("Fat")
                        .HasColumnType("real");
                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("text");
                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");
                    b.Property<float>("Protein")
                        .HasColumnType("real");
                    b.Property<int?>("RestaurantId")
                        .HasColumnType("integer");
                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("text");
                    b.HasKey("Id");
                    b.HasIndex("RestaurantId");
                    b.ToTable("RestaurantMeals");
                });
            modelBuilder.Entity("NutriMatch.Models.RecipeIngredient", b =>
                {
                    b.HasOne("NutriMatch.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                    b.HasOne("NutriMatch.Models.Recipe", null)
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                    b.Navigation("Ingredient");
                });
            modelBuilder.Entity("NutriMatch.Models.RestaurantMeal", b =>
                {
                    b.HasOne("NutriMatch.Models.Restaurant", "Restaurant")
                        .WithMany("RestaurantMeals")
                        .HasForeignKey("RestaurantId");
                    b.Navigation("Restaurant");
                });
            modelBuilder.Entity("NutriMatch.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
            modelBuilder.Entity("NutriMatch.Models.Restaurant", b =>
                {
                    b.Navigation("RestaurantMeals");
                });
#pragma warning restore 612, 618
        }
    }
}
