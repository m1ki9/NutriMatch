@model IEnumerable<NutriMatch.Models.Recipe>
@{
    Layout = "_Layout";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NutriMatch - Recipes</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --nutri-green: #4ade80;
            --nutri-green-dark: #22c55e;
            --nutri-gray: #6b7280;
            --nutri-light-gray: #f3f4f6;
        }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
            min-height: 100vh;
        }
        .navbar-brand {
            font-weight: bold;
            color: var(--nutri-green-dark) !important;
            font-size: 1.8rem;
        }
        .search-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            padding: 2rem;
            margin: 2rem 0;
            margin-top: 10rem;
        }
        .search-input {
            border: 2px solid #e5e7eb;
            border-radius: 50px;
            padding: 1rem 1.5rem;
            font-size: 1.1rem;
            transition: all 0.3s ease;
        }
        .search-input:focus {
            border-color: var(--nutri-green);
            box-shadow: 0 0 0 0.2rem rgba(74, 222, 128, 0.25);
        }
        .search-btn {
            background: var(--nutri-green);
            border: none;
            border-radius: 50px;
            padding: 1rem 2rem;
            color: white;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .search-btn:hover {
            background: var(--nutri-green-dark);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(74, 222, 128, 0.3);
        }
        .filter-section {
            background: white;
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            padding: 2rem;
            margin-bottom: 2rem;
        }
        .slider-container {
            margin: 1.5rem 0;
        }
        .slider-label {
            font-weight: 600;
            color: #374151;
            margin-bottom: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .range-slider {
            position: relative;
            height: 6px;
            background: #e5e7eb;
            border-radius: 3px;
            margin: 1rem 0;
        }
        .range-input {
            position: absolute;
            width: 100%;
            height: 6px;
            top: 0;
            background: none;
            pointer-events: none;
            -webkit-appearance: none;
            -moz-appearance: none;
        }
        .range-input::-webkit-slider-thumb {
            height: 20px;
            width: 20px;
            border-radius: 50%;
            background: var(--nutri-green);
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 8px rgba(0,0,0,0.2);
            -webkit-appearance: none;
            pointer-events: all;
            position: relative;
            z-index: 2;
        }
        .range-input::-moz-range-thumb {
            height: 20px;
            width: 20px;
            border-radius: 50%;
            background: var(--nutri-green);
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 8px rgba(0,0,0,0.2);
            pointer-events: all;
            position: relative;
            z-index: 2;
        }
        .range-fill {
            position: absolute;
            height: 6px;
            background: var(--nutri-green);
            border-radius: 3px;
            top: 0;
        }
        .recipe-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
            justify-items: center;
        }
        .recipe-card {
            width: 350px !important;
            background: white;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            cursor: pointer;
            min-height: 400px !important;
            max-width: 350px !important;
            flex-shrink: 0;
            box-sizing: border-box;
        }
        .recipe-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.15);
        }
        .recipe-card.loading {
            pointer-events: none;
        }
        .recipe-card.loading * {
            transition: none !important;
            animation: none !important;
        }
        .recipe-image {
            width: 100% !important;
            height: 200px !important;
            object-fit: cover;
            background: linear-gradient(45deg, var(--nutri-green), var(--nutri-green-dark));
            position: relative;
            display: block !important;
            flex-shrink: 0;
            box-sizing: border-box;
        }
        .favorite-btn {
            position: absolute;
            top: 12px;
            right: 12px;
            background: rgba(255, 255, 255, 0.9);
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 10;
            backdrop-filter: blur(10px);
        }
        .favorite-btn:hover {
            background: rgba(255, 255, 255, 1);
            transform: scale(1.1);
        }
        .favorite-btn i {
            font-size: 18px;
            color: #ef4444;
            transition: all 0.3s ease;
        }
        .favorite-btn:hover i {
            color: #dc2626;
        }
        .favorite-btn.active i {
            color: #ef4444;
            font-weight: 900;
        }
        .recipe-content {
            padding: 1.5rem !important;
            height: calc(100% - 200px) !important;
            display: flex !important;
            flex-direction: column !important;
            box-sizing: border-box;
            position: relative;
            flex-shrink: 0;
        }
        .recipe-title {
            font-size: 1.3rem !important;
            font-weight: 700 !important;
            color: #1f2937 !important;
            margin-bottom: 0.5rem !important;
            line-height: 1.3 !important;
            transition: none !important;
            animation: none !important;
        }
        .recipe-card .recipe-title,
        .recipe-card:hover .recipe-title,
        .recipe-card:active .recipe-title,
        .recipe-card:focus .recipe-title,
        .recipe-card.loading .recipe-title {
            font-size: 1.3rem !important;
            font-weight: 700 !important;
            color: #1f2937 !important;
            margin-bottom: 0.5rem !important;
            line-height: 1.3 !important;
            transition: none !important;
            animation: none !important;
        }
        .recipe-meta {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            color: var(--nutri-gray);
            flex-wrap: wrap;
        }
        .recipe-meta .rating {
            color: #fbbf24;
            font-weight: 600;
        }
        .recipe-meta i {
            margin-right: 4px;
        }
        .recipe-macros {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 0.5rem;
            margin-top: auto;
        }
        .macro-item {
            text-align: center;
            padding: 0.5rem;
            background: var(--nutri-light-gray);
            border-radius: 10px;
        }
        .macro-value {
            font-weight: 700;
            color: var(--nutri-green-dark);
            font-size: 1rem;
            line-height: 1.2;
        }
        .macro-label {
            font-size: 0.8rem;
            color: var(--nutri-gray);
            text-transform: uppercase;
            font-weight: 600;
            line-height: 1;
        }
        .results-count {
            margin: 1rem 0;
            font-size: 1.1rem;
            color: var(--nutri-gray);
            font-weight: 600;
        }
        #modalWindow {
            position: fixed;
            top: 0;
            left: 0;
            z-index: 9999;
            pointer-events: none;
        }
        #modalWindow .modal {
            pointer-events: all;
        }
        .recipe-card * {
            box-sizing: border-box;
        }
        .recipe-card[style*="none"] {
            display: none !important;
        }
        .recipe-card[style*="block"] {
            display: block !important;
        }
        .recipe-card h3.recipe-title {
            font-size: 1.3rem !important;
            font-weight: 700 !important;
            color: #1f2937 !important;
            margin-bottom: 0.5rem !important;
            line-height: 1.3 !important;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="search-container">
            <div class="row align-items-center">
                <div class="col-md-10">
                    <input type="text" class="form-control search-input" placeholder="Search recipes..." id="searchInput">
                </div>
                <div class="col-md-2">
                    <button class="btn search-btn w-100" onclick="searchRecipes()">
                        <i class="fas fa-search me-2"></i>Search
                    </button>
                </div>
            </div>
        </div>
        <div class="filter-section">
            <h4 class="mb-4" style="color: #1f2937; font-weight: 700;">
                <i class="fas fa-sliders-h me-2" style="color: var(--nutri-green);"></i>
                Filter by Macronutrients
            </h4>
            <div class="row">
                <div class="col-md-6 col-lg-3">
                    <div class="slider-container">
                        <div class="slider-label">
                            <span><i class="fas fa-fire me-1" style="color: #ef4444;"></i>Calories</span>
                            <span class="filter-values" id="caloriesValue">0 - 1000</span>
                        </div>
                        <div class="range-slider">
                            <div class="range-fill" id="caloriesFill"></div>
                            <input type="range" class="range-input" min="0" max="1000" value="0" id="caloriesMin" oninput="updateSlider('calories')">
                            <input type="range" class="range-input" min="0" max="1000" value="1000" id="caloriesMax" oninput="updateSlider('calories')">
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-3">
                    <div class="slider-container">
                        <div class="slider-label">
                            <span><i class="fas fa-drumstick-bite me-1" style="color: #8b5cf6;"></i>Protein (g)</span>
                            <span class="filter-values" id="proteinValue">0 - 100</span>
                        </div>
                        <div class="range-slider">
                            <div class="range-fill" id="proteinFill"></div>
                            <input type="range" class="range-input" min="0" max="100" value="0" id="proteinMin" oninput="updateSlider('protein')">
                            <input type="range" class="range-input" min="0" max="100" value="100" id="proteinMax" oninput="updateSlider('protein')">
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-3">
                    <div class="slider-container">
                        <div class="slider-label">
                            <span><i class="fas fa-bread-slice me-1" style="color: #f59e0b;"></i>Carbs (g)</span>
                            <span class="filter-values" id="carbsValue">0 - 150</span>
                        </div>
                        <div class="range-slider">
                            <div class="range-fill" id="carbsFill"></div>
                            <input type="range" class="range-input" min="0" max="150" value="0" id="carbsMin" oninput="updateSlider('carbs')">
                            <input type="range" class="range-input" min="0" max="150" value="150" id="carbsMax" oninput="updateSlider('carbs')">
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-3">
                    <div class="slider-container">
                        <div class="slider-label">
                            <span><i class="fas fa-tint me-1" style="color: #06b6d4;"></i>Fats (g)</span>
                            <span class="filter-values" id="fatsValue">0 - 100</span>
                        </div>
                        <div class="range-slider">
                            <div class="range-fill" id="fatsFill"></div>
                            <input type="range" class="range-input" min="0" max="100" value="0" id="fatsMin" oninput="updateSlider('fats')">
                            <input type="range" class="range-input" min="0" max="100" value="100" id="fatsMax" oninput="updateSlider('fats')">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="results-count">
            <i class="fas fa-utensils me-2"></i>Showing <strong>24 recipes</strong> matching your criteria
        </div>
        <div class="recipe-grid" id="recipeGrid">
            @foreach(var recipe in Model)
            {
                <div class="recipe-card" onclick="showRecipeDetails(@recipe.Id)" data-calories="@recipe.Calories" data-protein="@recipe.Protein" data-carbs="@recipe.Carbs" data-fat="@recipe.Fat">
                    <button class="favorite-btn" onclick="event.stopPropagation(); toggleFavorite(this)">
                        <i class="far fa-heart"></i>
                    </button>
                    <img src="@recipe.ImageUrl" alt="@recipe.Title" class="recipe-image">
                    <div class="recipe-content">
                        <h3 class="recipe-title">@recipe.Title</h3>
                        <div class="recipe-meta">
                            <span class="rating">
                                <i class="fas fa-star"></i> 4.8
                            </span>
                            <span><i class="far fa-clock"></i> 25 min</span>
                            <span><i class="fas fa-user"></i> Chef Mario</span>
                        </div>
                        <div class="recipe-macros">
                            <div class="macro-item">
                                <div class="macro-value">@recipe.Calories</div>
                                <div class="macro-label">Cal</div>
                            </div>
                            <div class="macro-item">
                                <div class="macro-value">@recipe.Protein</div>
                                <div class="macro-label">Protein</div>
                            </div>
                            <div class="macro-item">
                                <div class="macro-value">@recipe.Carbs</div>
                                <div class="macro-label">Carbs</div>
                            </div>
                            <div class="macro-item">
                                <div class="macro-value">@recipe.Fat</div>
                                <div class="macro-label">Fats</div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div id="modalWindow"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        function showRecipeDetails(recipeId) {
            const clickedCard = event.currentTarget;
            clickedCard.classList.add('loading');
            const titleElement = clickedCard.querySelector('.recipe-title');
            const originalStyles = {
                fontSize: '1.3rem',
                fontWeight: '700',
                color: '#1f2937',
                marginBottom: '0.5rem',
                lineHeight: '1.3'
            };
            Object.assign(titleElement.style, originalStyles);
            fetch(`/Recipes/Details/${recipeId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    const modalContainer = document.getElementById('modalWindow');
                    modalContainer.innerHTML = html;
                    const modalElement = modalContainer.querySelector('.modal');
                    if (modalElement) {
                        const modal = new bootstrap.Modal(modalElement);
                        modal.show();
                        modalElement.addEventListener('hidden.bs.modal', function () {
                            modalContainer.innerHTML = '';
                            clickedCard.classList.remove('loading');
                            titleElement.style.cssText = '';
                        });
                        modalElement.addEventListener('shown.bs.modal', function () {
                            clickedCard.classList.remove('loading');
                            Object.assign(titleElement.style, originalStyles);
                        });
                    } else {
                        clickedCard.classList.remove('loading');
                        titleElement.style.cssText = '';
                    }
                })
                .catch(err => {
                    console.error("Failed to fetch recipe details", err);
                    alert("Failed to load recipe details. Please try again.");
                    clickedCard.classList.remove('loading');
                    titleElement.style.cssText = '';
                });
        }
        function toggleFavorite(button) {
            const icon = button.querySelector('i');
            if (icon.classList.contains('far')) {
                icon.classList.remove('far');
                icon.classList.add('fas');
                button.classList.add('active');
            } else {
                icon.classList.remove('fas');
                icon.classList.add('far');
                button.classList.remove('active');
            }
        }
        document.addEventListener('DOMContentLoaded', function() {
            updateSlider('calories');
            updateSlider('protein');
            updateSlider('carbs');
            updateSlider('fats');
        });
        function updateSlider(type) {
            const minSlider = document.getElementById(type + 'Min');
            const maxSlider = document.getElementById(type + 'Max');
            const valueDisplay = document.getElementById(type + 'Value');
            const fill = document.getElementById(type + 'Fill');
            let minVal = parseInt(minSlider.value);
            let maxVal = parseInt(maxSlider.value);
            if (minVal > maxVal) {
                if (event.target === minSlider) {
                    maxSlider.value = minVal;
                    maxVal = minVal;
                } else {
                    minSlider.value = maxVal;
                    minVal = maxVal;
                }
            }
            valueDisplay.textContent = minVal + ' - ' + maxVal;
            const min = parseInt(minSlider.min);
            const max = parseInt(minSlider.max);
            const range = max - min;
            const leftPercent = ((minVal - min) / range) * 100;
            const rightPercent = ((maxVal - min) / range) * 100;
            fill.style.left = leftPercent + '%';
            fill.style.width = (rightPercent - leftPercent) + '%';
            filterRecipes();
        }
        function searchRecipes() {
            const searchTerm = document.getElementById('searchInput').value;
            console.log('Searching for:', searchTerm);
            filterRecipes();
        }
        function filterRecipes() {
            const calories = {
                min: parseInt(document.getElementById('caloriesMin').value),
                max: parseInt(document.getElementById('caloriesMax').value)
            };
            const protein = {
                min: parseInt(document.getElementById('proteinMin').value),
                max: parseInt(document.getElementById('proteinMax').value)
            };
            const carbs = {
                min: parseInt(document.getElementById('carbsMin').value),
                max: parseInt(document.getElementById('carbsMax').value)
            };
            const fats = {
                min: parseInt(document.getElementById('fatsMin').value),
                max: parseInt(document.getElementById('fatsMax').value)
            };
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const recipeCards = document.querySelectorAll('.recipe-card');
            let visibleCount = 0;
            recipeCards.forEach(card => {
                const title = card.querySelector('.recipe-title').textContent.toLowerCase();
                const recipeCalories = parseInt(card.dataset.calories) || 0;
                const recipeProtein = parseInt(card.dataset.protein) || 0;
                const recipeCarbs = parseInt(card.dataset.carbs) || 0;
                const recipeFats = parseInt(card.dataset.fat) || 0;
                const matchesSearch = searchTerm === '' || title.includes(searchTerm);
                const matchesMacros = 
                    recipeCalories >= calories.min && recipeCalories <= calories.max &&
                    recipeProtein >= protein.min && recipeProtein <= protein.max &&
                    recipeCarbs >= carbs.min && recipeCarbs <= carbs.max &&
                    recipeFats >= fats.min && recipeFats <= fats.max;
                if (matchesSearch && matchesMacros) {
                    card.style.display = 'block';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });
            const resultsCount = document.querySelector('.results-count');
            resultsCount.innerHTML = `<i class="fas fa-utensils me-2"></i>Showing <strong>${visibleCount} recipes</strong> matching your criteria`;
        }
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            searchInput.addEventListener('input', function() {
                filterRecipes();
            });
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    searchRecipes();
                }
            });
            const filterSection = document.querySelector('.filter-section h4');
            const resetBtn = document.createElement('button');
            resetBtn.className = 'btn btn-outline-secondary btn-sm ms-3';
            resetBtn.innerHTML = '<i class="fas fa-undo me-1"></i>Reset Filters';
            resetBtn.onclick = resetFilters;
            filterSection.appendChild(resetBtn);
        });
        function resetFilters() {
            document.getElementById('caloriesMin').value = 0;
            document.getElementById('caloriesMax').value = 1000;
            document.getElementById('proteinMin').value = 0;
            document.getElementById('proteinMax').value = 100;
            document.getElementById('carbsMin').value = 0;
            document.getElementById('carbsMax').value = 150;
            document.getElementById('fatsMin').value = 0;
            document.getElementById('fatsMax').value = 100;
            document.getElementById('searchInput').value = '';
            updateSlider('calories');
            updateSlider('protein');
            updateSlider('carbs');
            updateSlider('fats');
            filterRecipes();
        }
    </script>
</body>
</html>